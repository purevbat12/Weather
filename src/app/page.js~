"use client"
import { useState, useEffect } from "react";
import axios from "axios";
import Background from "@/components/Background.jsx"; 
import Cards from "@/components/Cards.jsx";
let bool = false;
let bool1 = false;
let counterLet = 0;
function page(){
	const weatherApiKey = "bbb550c559a541e480624212250704";
	let [data, setData] = useState({});
	let [countries, setCountries] = useState([]);
	let [locationName, setLocationName] = useState("Ulaanbaatar");
	let [list, setList] = useState([]);
	let [counter, setCounter] = useState(0); 
	let html = [];
	useEffect(() => {
		let fetchData = async() => {
			try{
				let d = await axios.get(`https://api.weatherapi.com/v1/forecast.json?key=${weatherApiKey}&q=${locationName}`);
				setData(d.data); 
			}
			catch(err){console.log(err);} 
		}      
		fetchData();
	}, [counter]);
	useEffect(() => {
		let fetchData1 = async() => {
			try{
				let d1 = await axios.get("https://countriesnow.space/api/v0.1/countries");
				setCountries(d1.data.data);	
				bool = true;
			}
			catch(err){}
		}
		fetchData1();
	}, []);
	function click(index){
		setLocationName(countries[index[0]].cities[index[1]]);
		counterLet++;
		setCounter(counterLet);
		setList([]);
		let input = document.getElementsByTagName("input")[0];
		input.value = "";
	}
	function inputHandler(event){
		if(event.target.value.length == 0){
			bool1 = false;
		}
		else{
			bool1 = true;
		}
		event.target.value = bool1 ? event.target.value[0].toUpperCase() + event.target.value.slice(1) : "";
		setLocationName(event.target.value);
		if(bool && bool1){
			let indices = {I: [], J: []};
			for(let i = 0; i < countries.length; i++){
				for(let j = 0; j < countries[i].cities.length; j++){
					if(bool1 ? (event.target.value[0].toUpperCase() + event.target.value.slice(1)) : "" === countries[i].cities[j].slice(0, event.target.value.length)){	
						indices.I.push(i);
						indices.J.push(j);
					}
				}
			}
			if(indices.I.length != 0){
				for(let i = 0; i < indices.I.length; i++){
					if(html.length < 4){
						html.push(
							<div className="flex items-center py-[24px] gap-[16px] cursor-pointer transition-all duration-[0.2s] ease-in-out rounded-[16px] backdrop-blur-[20px] hover:bg-[#f5f5f5]" onClick={() => click([indices.I[i], indices.J[i]])} id={"res" + html.length}>
								<img src="imgs/Vector3.png" className="w-[23.3px] h-[33.3px] opacity-20 ml-[24px]"></img>
								<p className="text-[18px] font-[700]">{event.target.value}<span className="opacity-[0.5]">{countries[indices.I[i]].cities[indices.J[i]].slice(event.target.value.length, countries[indices.I[i]].cities[indices.J[i]].length)}</span>, {countries[indices.I[i]].country}</p>
							</div>
						);
						setList(html);
					}
				}
			}
			else{
				setList([]);
			}
		}
		else{
			setList([]);
		}
	}
	return (
		<div>
			<Background/>	
			<div className="absolute top-[40px] left-[40px] z-2">
				<div className="bg-[#FFFFFF] px-[24px] py-[16px] rounded-[48px] flex items-center">
					<img src="imgs/Vector4.png" className="w-[34.98px] h-[34.98px] opacity-20"></img>
					<input className="rounded-[48px] px-[24px] py-[16px] text-[20px]" type="text" onChange={inputHandler} style={{outline:"none"}} placeholder="Search"></input>
				</div>
				<div className="mt-[10px] rounded-[24px] bg-[#FFFFFF]">
					{list}
				</div>
			</div>	
			<Cards city={data}/>		
		</div>
	);
}
export default page;
